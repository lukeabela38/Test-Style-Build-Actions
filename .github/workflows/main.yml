name: Python Package Test

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pip setuptools wheel
          pip install pytest
          if [ -f requirements_test.txt ]; then pip install -r requirements_test.txt; fi
          
      - name: Create output logs folder
        run: |
          mkdir output-logs/

      - name: Lint with flake8
        run: |
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --show-source --max-line-length=127 --statistics >> output-logs/flake8-${{ matrix.python-version }}.txt

      - name: Test with pytest
        run: pytest test_class.py --doctest-modules --junitxml=output-logs/junit/test-results-${{ matrix.python-version }}.txt
        
      - name: Assess coverage of unit tests
        run: |
          coverage run -m pytest
          coverage report -m > output-logs/coverage-report-${{ matrix.python-version }}.txt
          coverage html
          cp -r htmlcov output-logs/
          rm -rf htmlcov

      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-flake-coverage-results-${{ matrix.python-version }}
          path: output-logs/
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
